# Generated by Selenium IDE
import pytest
import time
import unittest
import warnings
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAnadirEspecialidad():
  def setUp(self):
    options = webdriver.ChromeOptions() 
    options.add_argument("start-maximized")
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    self.driver = webdriver.Chrome(options=options)
  
  def test_anadirEspecialidad(self):
    driver = self.driver
    driver.get("http://localhost:3000/")
    driver.set_window_size(727, 720)
    driver.find_element(By.CSS_SELECTOR, ".correo-ancho").send_keys("lian.tume@pucp.edu.pe")
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".contrasenia-input").send_keys("liantume12")
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".iniciar-sesion-btn").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".listaRoles:nth-child(2)").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".btnAniadirGM").click()
    time.sleep(1)
    driver.find_element(By.NAME, "codigo").click()
    time.sleep(1)
    driver.find_element(By.NAME, "codigo").send_keys("prueba")
    time.sleep(1)
    driver.find_element(By.NAME, "descripcion").click()
    time.sleep(1)
    driver.find_element(By.NAME, "descripcion").send_keys("pruebaprueba")
    time.sleep(1)
    driver.find_element(By.NAME, "evidencia").click()
    time.sleep(1)
    driver.find_element(By.NAME, "evidencia").send_keys("pruebaprueba")
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".botonesSuperioresRFAE .btnDisenio").click()
    time.sleep(1)
    driver.find_element(By.ID, "2").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".btnDisenio").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btnDisenio")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    driver.find_element(By.CSS_SELECTOR, ".botonAceptarAAF").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".botonesSuperioresAAF .btnAniadirRFAE").click()
    time.sleep(1)
    driver.execute_script("window.scrollTo(0,0)")
    time.sleep(1)
    driver.find_element(By.ID, "6").click()
    time.sleep(1)
    driver.find_element(By.ID, "5").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".btnDisenio").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btnDisenio")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    driver.find_element(By.CSS_SELECTOR, ".botonAceptarAARF").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".btnGuardarRFAE").click()
    time.sleep(1)
    driver.find_element(By.CSS_SELECTOR, ".botonAceptarRFAE").click()
    time.sleep(1)
    driver.execute_script("window.scrollTo(0,0)")
    time.sleep(1)
  
def tearDown(self):
    warnings.filterwarnings(action="ignore", message="unclosed", category=ResourceWarning)
    self.driver.close()
    print("Test completado")
        
if __name__ == "__main__":
    unittest.main()