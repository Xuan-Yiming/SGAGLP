[{"C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\index.js":"1","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\App.js":"2","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\MenuContenedor.jsx":"3","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\IngresarCuenta.jsx":"4","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\ExpandableMenu.js":"5","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\PlanificacionPrincipal.jsx":"6","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\SimulacionPrincipal.jsx":"7","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\canvas.js":"8","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\CanvasPrime.js":"9","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\useCanvas.js":"10","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\MapaGrid.jsx":"11","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\MapaGrid2.jsx":"12"},{"size":265,"mtime":1697690250450,"results":"13","hashOfConfig":"14"},{"size":668,"mtime":1698029984981,"results":"15","hashOfConfig":"14"},{"size":1017,"mtime":1698029984985,"results":"16","hashOfConfig":"14"},{"size":4188,"mtime":1697690250442,"results":"17","hashOfConfig":"14"},{"size":1710,"mtime":1698029984985,"results":"18","hashOfConfig":"14"},{"size":953,"mtime":1698029984986,"results":"19","hashOfConfig":"14"},{"size":3710,"mtime":1698116658684,"results":"20","hashOfConfig":"14"},{"size":970,"mtime":1697931184157,"results":"21","hashOfConfig":"14"},{"size":849,"mtime":1698029984982,"results":"22","hashOfConfig":"14"},{"size":1225,"mtime":1698029984984,"results":"23","hashOfConfig":"14"},{"size":4765,"mtime":1698029984982,"results":"24","hashOfConfig":"14"},{"size":4381,"mtime":1698116329710,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"ucqxnk",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"29"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"29"},"C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\index.js",[],[],["72"],"C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\App.js",["73"],[],"\r\nimport './App.css';\r\nimport IngresarCuenta from './componentes/IngresarCuenta';\r\nimport MenuContenedor from './componentes/MenuContenedor';\r\nimport PlanificacionPrincipal from './componentes/PlanificacionPrincipal';\r\n\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n        <div className='App'>\r\n            <Routes>\r\n                <Route path=\"/\" element={<IngresarCuenta />} />\r\n                <Route path=\"/inicio\" element={<MenuContenedor/>} />\r\n            </Routes>\r\n        </div>\r\n    </Router>\r\n    \r\n\r\n    \r\n    // <PlanificacionPrincipal />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\MenuContenedor.jsx",["74","75","76"],[],"import React, { useEffect, useState } from 'react';\r\nimport '../hojas-estilo/MenuContenedor.css';\r\nimport ExpandableMenu from './ExpandableMenu';\r\nimport PlanificacionPrincipal from './PlanificacionPrincipal';\r\nimport SimulacionPrincipal from './SimulacionPrincipal';\r\n\r\n\r\nexport function MenuContenedor() {\r\n\r\n    const [bandera,setBandera]=useState(true);\r\n    const [bandera2,setBandera2]=useState(false);\r\n    const [bandera3,setBandera3]=useState(false);\r\n\r\n\r\n    return (\r\n        <div className='superContenedor'>\r\n            \r\n            <div className='totalMenuPrincipal'>\r\n                \r\n                <div className='contenedorTrabajo'>\r\n                    {bandera?<SimulacionPrincipal cambiarComponente={setBandera} />:\r\n                    bandera2?<PlanificacionPrincipal cambiarComponente={setBandera2} />:\r\n                    <SimulacionPrincipal/>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <ExpandableMenu />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuContenedor;","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\IngresarCuenta.jsx",["77","78","79","80"],[],"import React, { useEffect, useState } from 'react';\r\nimport '../hojas-estilo/IngresarCuenta.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'\r\nimport \"../hojas-estilo/Reusable/Boton.css\";\r\nimport '../App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport logosga from \"../imagenes/logoSGA.png\";\r\n\r\nexport function IngresarCuenta() {\r\n\r\n    const [correo, setCorreo] = useState('');\r\n    const [contrasenia, setContrasenia] = useState('');\r\n    const [cambioPag, setCambioPag] = useState(false);\r\n    const isContraseniaFilled = contrasenia !== '';\r\n    const isCorreoFilled = correo !== '';\r\n    const [mostrarContrasenia, setMostrarContrasenia] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const cambiarTipoContrasenia = () => {\r\n        setMostrarContrasenia(!mostrarContrasenia);\r\n    }\r\n\r\n    const activarCambioPag = () => {\r\n        setCambioPag(true);\r\n    }\r\n\r\n    \r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'correo') {\r\n            setCorreo(value);\r\n        } else if (name === 'contrasenia') {\r\n            setContrasenia(value);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div  className='login-contenedor-principal'>\r\n\r\n            <div className='login-sub-contenedor'>\r\n\r\n            <div className='login-espacio-logo'>\r\n                <img className='imagenLogo' src={logosga}/>\r\n            </div>\r\n            <div className='letrero-login'>\r\n                Login\r\n            </div>\r\n            <div className='contenedor-usuario'>\r\n\r\n                <div className='label-usuario'>\r\n                    Usuario\r\n                </div> \r\n                <div className='textbox-usuario'>\r\n                    <input\r\n                            id=\"correo-input\"\r\n                            onChange={(e) => {\r\n                                setCorreo(e.target.value);\r\n                                handleInputChange(e);\r\n                            }}\r\n                            type='text'\r\n                            name=\"correo\"\r\n                            value={correo}\r\n                            className={`form-control input-group correo-ancho ${correo !== '' ? 'campo-lleno' : ''}`}\r\n                        />\r\n                        {/* <label className={isCorreoFilled ? 'filled' : ''}>Correo Electrónico</label> */}\r\n                        <br />\r\n                </div>\r\n\r\n            </div>\r\n            <div className='contenedor-contrasenia'>\r\n                <div className='label-contrasenia'>\r\n                    Contraseña\r\n                </div>\r\n                <div className='textbox-contrasenia'>\r\n                        <div className=\"input-groupIC contrasenia-input-group\">\r\n                            <input\r\n                                onChange={(e) => {\r\n                                    setContrasenia(e.target.value);\r\n                                    handleInputChange(e);\r\n                                }}\r\n                                type={mostrarContrasenia ? 'text' : 'password'}\r\n                                name=\"contrasenia\"\r\n                                value={contrasenia}\r\n                                className={`form-control contrasenia-input input-group correo-ancho ${contrasenia !== '' ? 'campo-lleno' : ''}`}\r\n                            />\r\n                            {/* <label className={isContraseniaFilled ? 'filled' : ''}>Contraseña</label> */}\r\n                            <span className=\"input-group-text iconoradious\" onClick={cambiarTipoContrasenia}>\r\n                                <i className={`bi bi-${mostrarContrasenia ? 'eye-slash-fill' : 'eye-fill'}`}></i>\r\n                            </span>\r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <button className='botonIngresar' onClick={activarCambioPag}>\r\n\r\n                Ingresar\r\n\r\n            </button>\r\n            {cambioPag ? navigate(\"/inicio\") : <></>}\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngresarCuenta;\r\n","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\ExpandableMenu.js",["81","82"],[],"\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport '../hojas-estilo/ExpandableMenu.css';\r\nimport logosga from \"../imagenes/logoSGA.png\";\r\n\r\nconst ExpandableMenu = () => {\r\n  const [menuExpanded, setMenuExpanded] = useState(false);\r\n  const menuRef = useRef(null);\r\n\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n      setMenuExpanded(false);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n  const toggleMenu = () => {\r\n    setMenuExpanded(!menuExpanded);\r\n  };\r\n\r\n//   <i class=\"bi bi-calendar3\"></i>\r\n\r\n  return (\r\n    <div className={`expandable-menu ${menuExpanded ? 'expanded' : ''}`} ref={menuRef}>\r\n      <div className=\"toggle-button\" onClick={toggleMenu}>\r\n        {menuExpanded? <img className='logoMenu' src={logosga}/>:\r\n        <img className='logoMenuPeque' src={logosga}/>}\r\n        \r\n      </div>\r\n      <div className=\"menu-content\">\r\n        <ul>\r\n        \r\n          <li>{menuExpanded ?     <div><i class=\"bi bi-calendar3\"></i> Planificacion</div>:<i class=\"bi bi-calendar3\"></i>  }</li>\r\n          <li>{menuExpanded ?     <div><i class=\"bi bi-box-seam\"></i> Pedidos</div>:<i class=\"bi bi-box-seam\"></i>  }</li>\r\n          <li>{menuExpanded ?     <div><i class=\"bi bi-truck\"></i> Flotas</div>:<i class=\"bi bi-truck\"></i> }</li>\r\n          <li>{menuExpanded ?     <div><i class=\"bi bi-stopwatch\"></i> Simulaciones</div>:<i class=\"bi bi-stopwatch\"></i> }</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandableMenu;\r\n","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\PlanificacionPrincipal.jsx",["83","84"],[],"import React, { useEffect, useState } from 'react';\r\nimport '../hojas-estilo/PlanificacionPrincipal.css';\r\n// import Canvas from \"\"\r\n\r\n\r\nexport function PlanificacionPrincipal() {\r\n\r\n\r\n\r\n    return (\r\n        <div className='principalPlanificacion'>\r\n            <div className='principalPlanificacionIzq'>\r\n\r\n                <div className='PlanificacicionTitulo'></div>\r\n                <div className='PlanifiacionMapa'>\r\n                    \r\n\r\n                </div>\r\n                \r\n                <div className='PlanificacionBotones'></div>\r\n            </div>\r\n            <div className='principalPlanificacionDer'>\r\n                <div className='PlanificacionBotonesDer'></div>\r\n                <div className='PlanificacionTablaPedidos'></div>\r\n                <div className='PlanificacionResumen'></div>\r\n                <div className=''></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlanificacionPrincipal;","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\componentes\\SimulacionPrincipal.jsx",["85","86","87","88","89","90","91"],[],"C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\canvas.js",["92","93"],[],"C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\CanvasPrime.js",["94","95","96"],[],"import React, { useEffect, useRef } from 'react';\r\nimport useCanvas from './useCanvas.js'\r\n\r\nconst CanvasPrime =props =>{\r\n\r\n    const{draw, ...rest}= props;\r\n    // const ref=useRef();\r\n\r\n    \r\n    const ref = useCanvas(draw);\r\n\r\n\r\n    // useEffect(()=>{\r\n        \r\n    //     const canvas = ref.current;\r\n    //     const context = canvas.getContext('2d');\r\n        \r\n\r\n    //     let count = 0;\r\n    //     let animationId;\r\n\r\n\r\n    //     const renderer = () =>{\r\n    //         count++;\r\n    //         draw(context,count);\r\n    //         animationId = window.requestAnimationFrame(renderer);\r\n    //     }\r\n\r\n    //     renderer()\r\n        \r\n    //     // draw(context);\r\n\r\n    //     return  () => window.cancelAnimationFrame(animationId);\r\n    // },[draw])\r\n\r\n\r\n\r\n\r\n    return <canvas ref={ref}{...props}/>\r\n}\r\n\r\nexport default CanvasPrime;","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\useCanvas.js",["97","98"],[],"import React, { useEffect, useRef,useState } from 'react';\r\n\r\n\r\nconst useCanvas = draw =>{\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n    const ref=useRef();\r\n\r\n    useEffect(() => {\r\n        // Ajustar el tamaño del canvas al del contenedor\r\n        function updateSize() {\r\n            if (ref.current && ref.current.parentElement) {\r\n                const { width, height } = ref.current.parentElement.getBoundingClientRect();\r\n                setDimensions({ width, height });\r\n            }\r\n        }\r\n\r\n        updateSize();\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        const canvas = ref.current;\r\n        const context = canvas.getContext('2d');\r\n        context.canvas.width = dimensions.width;\r\n        context.canvas.height = dimensions.height;\r\n\r\n\r\n        let count = 0;\r\n        let animationId;\r\n\r\n\r\n        const renderer = () =>{\r\n            count++;\r\n            draw(context,count);\r\n            animationId = window.requestAnimationFrame(renderer);\r\n        }\r\n\r\n        renderer()\r\n        \r\n        // draw(context);\r\n\r\n        return  () => window.cancelAnimationFrame(animationId);\r\n    },[draw])\r\n\r\n\r\n\r\n\r\n    return ref\r\n}\r\n\r\nexport default useCanvas;","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\MapaGrid.jsx",["99","100","101"],[],"import React, { useRef, useEffect, useState } from 'react';\r\n// import '../HojasDeEstilo/MapGrid.css';\r\n// import logo from \"../images/logoCircular.png\";\r\n\r\nconst MapGrid = (props) => {\r\n    const canvasRef = useRef(null);\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n    // const [images, setImages] = useState({});\r\n\r\n    const objectX = useRef(0);\r\n    const objectSpeed = 2;\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n\r\n        // const icons = {\r\n        //     camion: logo,\r\n        //     cliente: logo,\r\n        //     planta: logo\r\n        // };\r\n    \r\n        const loadedImages = {};\r\n    \r\n        // const promises = Object.entries(icons).map(([key, url]) => {\r\n        //     return new Promise((resolve, reject) => {\r\n        //         const img = new Image();\r\n        //         img.src = url;\r\n        //         img.onload = () => {\r\n        //             loadedImages[key] = img;\r\n        //             resolve();\r\n        //         };\r\n        //         img.onerror = reject;\r\n        //     });\r\n        // });\r\n    \r\n        // Promise.all(promises).then(() => setImages(loadedImages));\r\n\r\n\r\n        // Ajustar el tamaño del canvas al del contenedor\r\n        function updateSize() {\r\n            if (canvasRef.current && canvasRef.current.parentElement) {\r\n                const { width, height } = canvasRef.current.parentElement.getBoundingClientRect();\r\n                setDimensions({ width, height });\r\n            }\r\n        }\r\n\r\n        updateSize();\r\n\r\n        // Agregar listener para detectar cambios de tamaño y actualizar el canvas\r\n        window.addEventListener('resize', updateSize);\r\n        return () => window.removeEventListener('resize', updateSize);\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = dimensions.width;\r\n        canvas.height = dimensions.height;\r\n\r\n        const cuadrosAlto = 50;\r\n        const cuadrosAncho = 70;\r\n\r\n        // Dibujar cuadrícula\r\n        for (let x = 0; x < canvas.width; x += canvas.width / cuadrosAncho) {\r\n            ctx.moveTo(x, 0);\r\n            ctx.lineTo(x, canvas.height);\r\n        }\r\n\r\n        for (let y = 0; y < canvas.height; y += canvas.height / cuadrosAlto) {\r\n            ctx.moveTo(0, y);\r\n            ctx.lineTo(canvas.width, y);\r\n        }\r\n\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.stroke();\r\n\r\n\r\n        const backgroundImage = new Image();\r\n        backgroundImage.src = 'ruta/a/la/imagen-de-fondo.png'; // Reemplaza con la ruta correcta\r\n        backgroundImage.onload = () => {\r\n            // Dibujar la imagen de fondo\r\n            ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n            // ... (código para dibujar el objeto móvil)\r\n        };\r\n\r\n\r\n\r\n\r\n        // function animate(){\r\n        //     let a=0;\r\n        //     ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);\r\n        //     // context.canvas.width = context.canvas.width;\r\n        //     ctx.fillStyle = 'grey';\r\n        \r\n        //     // const delta = count%800;\r\n        //     ctx.fillRect(10 + a,10,100,100);\r\n        //     a++;\r\n        // }\r\n\r\n        // animate();\r\n\r\n        // Dibujar íconos\r\n        // const elementos = props.elementos || [];\r\n        // elementos.forEach(elemento => {\r\n        //     const img = images[elemento.tipo];\r\n        //     if (img) {\r\n        //         ctx.drawImage(\r\n        //             img,\r\n        //             elemento.x * (canvas.width / 70) - 10,  // Restamos la mitad del tamaño de la imagen para centrarla\r\n        //             elemento.y * (canvas.height / 50) - 10,\r\n        //             20,  // Ancho deseado\r\n        //             20   // Alto deseado\r\n        //         );\r\n        //     }\r\n        // });\r\n        // const updateMovingObject = () => {\r\n        //     objectX.current += objectSpeed;\r\n        //     if (objectX.current > canvas.width) {\r\n        //         objectX.current = -20; // Vuelve a empezar desde el principio\r\n        //     }\r\n        // };\r\n\r\n\r\n        // const drawMovingObject = () => {\r\n        //     ctx.clearRect(0, 0, canvas.width, canvas.height); \r\n        //     ctx.fillStyle = 'red'; // Color del objeto móvil\r\n        //     ctx.fillRect(objectX.current, canvas.height / 2 - 10, 20, 20); // Dibuja un rectángulo móvil\r\n        // };\r\n\r\n        // const animateMovingObject = () => {\r\n        //     drawMovingObject();\r\n        //     updateMovingObject();\r\n        //     requestAnimationFrame(animateMovingObject);\r\n        // };\r\n\r\n        // animateMovingObject();\r\n\r\n    }, [dimensions]);\r\n    \r\n    \r\n\r\n    return <canvas ref={canvasRef} {...props} />;\r\n};\r\n\r\nexport default MapGrid;","C:\\Users\\FABIAN\\Documents\\CURSOS\\2023-2\\DP1\\SGAGLP\\front-notas\\src\\canvas-resize\\MapaGrid2.jsx",["102","103","104","105","106","107","108"],[],"import React, { useRef, useEffect, useState } from 'react';\r\n// import '../HojasDeEstilo/MapGrid.css';\r\n// import logo from \"../images/logoCircular.png\";\r\n\r\nconst MapGrid2 = (props) => {\r\n    const canvasRef = useRef(null);\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n    let [unidadCuadroAncho, setUnidadCuadroAncho] = useState('');\r\n    let [unidadCuadroAlto, setUnidadCuadroAlto] = useState('');\r\n\r\n    // const [images, setImages] = useState({});\r\n\r\n    const objectX = useRef(0);\r\n    const objectSpeed = 2;\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     // Maneja los cambios en los datos aquí\r\n\r\n    //     console.log(`propsv:`,props);\r\n\r\n    //     setDimensions(props.ancho,props.alto);\r\n    //     console.log(`Ancho del div: ${props.ancho}`);\r\n    //     console.log(`alto del div: ${props.alto}`);\r\n    // }, [props.ancho, props.alto]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Ajustar el tamaño del canvas al del contenedor\r\n        function updateSize() {\r\n            if (canvasRef.current && canvasRef.current.parentElement) {\r\n                const { width, height } = canvasRef.current.parentElement.getBoundingClientRect();\r\n                setDimensions({ width, height });\r\n            }\r\n        }\r\n\r\n        updateSize();\r\n\r\n        // Agregar listener para detectar cambios de tamaño y actualizar el canvas\r\n        window.addEventListener('resize', updateSize);\r\n        return () => window.removeEventListener('resize', updateSize);\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = dimensions.width;\r\n        canvas.height = dimensions.height;\r\n\r\n\r\n\r\n        const cuadrosAlto = 50;\r\n        const cuadrosAncho = 70;\r\n        console.log(`Ancho del cuadricula: ${canvas.width / cuadrosAncho}`);\r\n        console.log(`alto cuadricula: ${canvas.height / cuadrosAncho}`);\r\n\r\n        var x=0;\r\n\r\n        function animate(){\r\n        \r\n            //seccion de medidas\r\n            // un cuadro es una separacion canvas.width / cuadrosAncho\r\n            // supoiniendo que un cuadro es 1km entonces para estar a 50kmh\r\n            //entoncesla velocdiadd o corriendo una hora por ms es velocidad --> canvas.width *50 / cuadrosAncho cada segundo\r\n            \r\n\r\n            unidadCuadroAncho = canvas.width / cuadrosAncho;\r\n            unidadCuadroAlto = canvas.height / cuadrosAlto;\r\n\r\n\r\n            //EL RETO AHORA ES PONERLO EN UNA CELDA QUE ADJACENTE QUE NOS MANDEN, DE 0,0 A 0,1 A 0,2 ETC\r\n\r\n            const consecutivePoints = [{\"x\":0,\"y\":1},{\"x\":0,\"y\":2},{\"x\":0,\"y\":3}]\r\n\r\n        \r\n            requestAnimationFrame(animate);\r\n            ctx.clearRect(0,0,canvas.width,canvas.height);\r\n\r\n\r\n            ctx.beginPath();\r\n            // Dibujar cuadrícula\r\n            for (let x = 0; x < canvas.width; x += canvas.width / cuadrosAncho) {\r\n                ctx.moveTo(x, 0);\r\n                ctx.lineTo(x, canvas.height);\r\n            }\r\n\r\n            for (let y = 0; y < canvas.height; y += canvas.height / cuadrosAlto) {\r\n                ctx.moveTo(0, y);\r\n                ctx.lineTo(canvas.width, y);\r\n            }\r\n            ctx.strokeStyle = \"black\";\r\n            ctx.stroke();\r\n            //termina cuadricula\r\n        \r\n            // console.log(x);\r\n\r\n\r\n            // ctx.beginPath();\r\n    \r\n            // ctx.arc(300,300,30,0,Math.PI,true);\r\n            // ctx.strokeStyle='red';\r\n            // ctx.stroke();\r\n    \r\n            // ctx.beginPath();\r\n            \r\n            \r\n\r\n            //el anochde del canvas que divide a delta es hasta donde llegara, ese sera nuestro punto de finalizacion\r\n\r\n            const delta = (x)%canvas.width;\r\n\r\n            // ctx.arc(delta,300,30,0,Math.PI,true);\r\n            // ctx.strokeStyle='blue';\r\n            // ctx.stroke();\r\n            ctx.fillRect(delta + unidadCuadroAncho*0.5,0 +unidadCuadroAlto*0.5,\r\n                                unidadCuadroAncho,unidadCuadroAlto);\r\n            x+=(unidadCuadroAncho)/50;  //esto se divide entre 60 para el tiempo real cada min y 3600 para segundo\r\n            // requestAnimationFrame(animate);\r\n            // console.log('loop');\r\n        \r\n        }\r\n        \r\n        animate();\r\n\r\n    }, [dimensions]);\r\n    \r\n    \r\n\r\n    return <canvas ref={canvasRef} {...props} />;\r\n};\r\n\r\nexport default MapGrid2;",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":30},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"116","line":12,"column":12,"nodeType":"113","messageId":"114","endLine":12,"endColumn":20},{"ruleId":"111","severity":1,"message":"117","line":12,"column":21,"nodeType":"113","messageId":"114","endLine":12,"endColumn":32},{"ruleId":"111","severity":1,"message":"118","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"111","severity":1,"message":"119","line":15,"column":11,"nodeType":"113","messageId":"114","endLine":15,"endColumn":30},{"ruleId":"111","severity":1,"message":"120","line":16,"column":11,"nodeType":"113","messageId":"114","endLine":16,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":51,"column":17,"nodeType":"123","endLine":51,"endColumn":60},{"ruleId":"121","severity":1,"message":"122","line":33,"column":24,"nodeType":"123","endLine":33,"endColumn":65},{"ruleId":"121","severity":1,"message":"122","line":34,"column":9,"nodeType":"123","endLine":34,"endColumn":55},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"124","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"124","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"125","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"126","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":16},{"ruleId":"111","severity":1,"message":"127","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":15},{"ruleId":"111","severity":1,"message":"128","line":43,"column":11,"nodeType":"113","messageId":"114","endLine":43,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":56,"column":22,"nodeType":"131","endLine":56,"endColumn":48},{"ruleId":"129","severity":1,"message":"132","line":57,"column":23,"nodeType":"131","endLine":57,"endColumn":50},{"ruleId":"133","severity":2,"message":"134","line":42,"column":21,"nodeType":"113","messageId":"135","endLine":42,"endColumn":31},{"ruleId":"133","severity":2,"message":"136","line":42,"column":32,"nodeType":"113","messageId":"135","endLine":42,"endColumn":43},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"137","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":34},{"ruleId":"111","severity":1,"message":"138","line":6,"column":20,"nodeType":"113","messageId":"114","endLine":6,"endColumn":24},{"ruleId":"111","severity":1,"message":"139","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":44,"column":7,"nodeType":"141","endLine":44,"endColumn":13,"suggestions":"142"},{"ruleId":"111","severity":1,"message":"143","line":10,"column":11,"nodeType":"113","messageId":"114","endLine":10,"endColumn":18},{"ruleId":"111","severity":1,"message":"144","line":11,"column":11,"nodeType":"113","messageId":"114","endLine":11,"endColumn":22},{"ruleId":"111","severity":1,"message":"145","line":23,"column":15,"nodeType":"113","messageId":"114","endLine":23,"endColumn":27},{"ruleId":"111","severity":1,"message":"146","line":9,"column":29,"nodeType":"113","messageId":"114","endLine":9,"endColumn":49},{"ruleId":"111","severity":1,"message":"147","line":10,"column":28,"nodeType":"113","messageId":"114","endLine":10,"endColumn":47},{"ruleId":"111","severity":1,"message":"143","line":14,"column":11,"nodeType":"113","messageId":"114","endLine":14,"endColumn":18},{"ruleId":"111","severity":1,"message":"144","line":15,"column":11,"nodeType":"113","messageId":"114","endLine":15,"endColumn":22},{"ruleId":"129","severity":1,"message":"148","line":71,"column":33,"nodeType":"149","endLine":71,"endColumn":60},{"ruleId":"129","severity":1,"message":"150","line":72,"column":32,"nodeType":"149","endLine":72,"endColumn":59},{"ruleId":"111","severity":1,"message":"151","line":77,"column":19,"nodeType":"113","messageId":"114","endLine":77,"endColumn":36},"no-new-object",["152"],"no-unused-vars","'PlanificacionPrincipal' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'bandera3' is assigned a value but never used.","'setBandera3' is assigned a value but never used.","'Link' is defined but never used.","'isContraseniaFilled' is assigned a value but never used.","'isCorreoFilled' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Canvas' is defined but never used.","'MapaGrid' is defined but never used.","'draw' is assigned a value but never used.","'draw2' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'divWidth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'divHeight' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-restricted-globals","Unexpected use of 'innerWidth'.","defaultMessage","Unexpected use of 'innerHeight'.","'useRef' is defined but never used.","'rest' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'dimensions.height' and 'dimensions.width'. Either include them or remove the dependency array.","ArrayExpression",["153"],"'objectX' is assigned a value but never used.","'objectSpeed' is assigned a value but never used.","'loadedImages' is assigned a value but never used.","'setUnidadCuadroAncho' is assigned a value but never used.","'setUnidadCuadroAlto' is assigned a value but never used.","Assignments to the 'unidadCuadroAncho' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","Assignments to the 'unidadCuadroAlto' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'consecutivePoints' is assigned a value but never used.","no-object-constructor",{"desc":"154","fix":"155"},"Update the dependencies array to be: [dimensions.height, dimensions.width, draw]",{"range":"156","text":"157"},[1161,1167],"[dimensions.height, dimensions.width, draw]"]